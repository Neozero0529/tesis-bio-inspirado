// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_DRSServer.proto

#include "messages_DRSServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class MVector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVector2>
      _instance;
} _MVector2_default_instance_;
class MObstacleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MObstacle>
      _instance;
} _MObstacle_default_instance_;
class MRequestStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MRequestStatus>
      _instance;
} _MRequestStatus_default_instance_;
class MRobotStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MRobotStatus>
      _instance;
} _MRobotStatus_default_instance_;
class MCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MCommand>
      _instance;
} _MCommand_default_instance_;
class MDRSServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MDRSServer>
      _instance;
} _MDRSServer_default_instance_;
namespace protobuf_messages_5fDRSServer_2eproto {
void InitDefaultsMVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_MVector2_default_instance_;
    new (ptr) ::MVector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVector2::InitAsDefaultInstance();
}

void InitDefaultsMVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMVector2Impl);
}

void InitDefaultsMObstacleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_messages_5fDRSServer_2eproto::InitDefaultsMVector2();
  {
    void* ptr = &::_MObstacle_default_instance_;
    new (ptr) ::MObstacle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MObstacle::InitAsDefaultInstance();
}

void InitDefaultsMObstacle() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMObstacleImpl);
}

void InitDefaultsMRequestStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_MRequestStatus_default_instance_;
    new (ptr) ::MRequestStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MRequestStatus::InitAsDefaultInstance();
}

void InitDefaultsMRequestStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMRequestStatusImpl);
}

void InitDefaultsMRobotStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_messages_5fDRSServer_2eproto::InitDefaultsMVector2();
  protobuf_messages_5fDRSServer_2eproto::InitDefaultsMObstacle();
  {
    void* ptr = &::_MRobotStatus_default_instance_;
    new (ptr) ::MRobotStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MRobotStatus::InitAsDefaultInstance();
}

void InitDefaultsMRobotStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMRobotStatusImpl);
}

void InitDefaultsMCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_MCommand_default_instance_;
    new (ptr) ::MCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MCommand::InitAsDefaultInstance();
}

void InitDefaultsMCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMCommandImpl);
}

void InitDefaultsMDRSServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_messages_5fDRSServer_2eproto::InitDefaultsMRequestStatus();
  protobuf_messages_5fDRSServer_2eproto::InitDefaultsMCommand();
  {
    void* ptr = &::_MDRSServer_default_instance_;
    new (ptr) ::MDRSServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MDRSServer::InitAsDefaultInstance();
}

void InitDefaultsMDRSServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMDRSServerImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MVector2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MVector2, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MVector2, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MObstacle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MObstacle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MObstacle, obstacleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MObstacle, pos_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRequestStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRequestStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRequestStatus, robotid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRobotStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRobotStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRobotStatus, robotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRobotStatus, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MRobotStatus, obstacles_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, robotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MCommand, t_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MDRSServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MDRSServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MDRSServer, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MDRSServer, command_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::MVector2)},
  { 9, 16, sizeof(::MObstacle)},
  { 18, 24, sizeof(::MRequestStatus)},
  { 25, 33, sizeof(::MRobotStatus)},
  { 36, 45, sizeof(::MCommand)},
  { 49, 56, sizeof(::MDRSServer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MObstacle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MRequestStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MRobotStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MDRSServer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "messages_DRSServer.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030messages_DRSServer.proto\" \n\010MVector2\022\t"
      "\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"7\n\tMObstacle\022\022\n\nobs"
      "tacleId\030\001 \002(\005\022\026\n\003pos\030\002 \002(\0132\t.MVector2\"!\n"
      "\016MRequestStatus\022\017\n\007robotId\030\001 \002(\005\"V\n\014MRob"
      "otStatus\022\017\n\007robotId\030\001 \002(\005\022\026\n\003pos\030\002 \001(\0132\t"
      ".MVector2\022\035\n\tobstacles\030\003 \003(\0132\n.MObstacle"
      "\">\n\010MCommand\022\017\n\007robotId\030\001 \002(\005\022\n\n\002vx\030\002 \002("
      "\001\022\n\n\002vy\030\003 \002(\001\022\t\n\001t\030\004 \002(\001\"J\n\nMDRSServer\022 "
      "\n\007request\030\001 \001(\0132\017.MRequestStatus\022\032\n\007comm"
      "and\030\002 \001(\0132\t.MCommand"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_DRSServer.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5fDRSServer_2eproto

// ===================================================================

void MVector2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVector2::kXFieldNumber;
const int MVector2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVector2::MVector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVector2)
}
MVector2::MVector2(const MVector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:MVector2)
}

void MVector2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

MVector2::~MVector2() {
  // @@protoc_insertion_point(destructor:MVector2)
  SharedDtor();
}

void MVector2::SharedDtor() {
}

void MVector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MVector2::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MVector2& MVector2::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMVector2();
  return *internal_default_instance();
}

MVector2* MVector2::New(::google::protobuf::Arena* arena) const {
  MVector2* n = new MVector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:MVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MVector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVector2)
  return false;
#undef DO_
}

void MVector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVector2)
}

::google::protobuf::uint8* MVector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVector2)
  return target;
}

size_t MVector2::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MVector2)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t MVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVector2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MVector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const MVector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MVector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVector2)
    MergeFrom(*source);
  }
}

void MVector2::MergeFrom(const MVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MVector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVector2::CopyFrom(const MVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVector2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MVector2::Swap(MVector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVector2::InternalSwap(MVector2* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MVector2::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MObstacle::InitAsDefaultInstance() {
  ::_MObstacle_default_instance_._instance.get_mutable()->pos_ = const_cast< ::MVector2*>(
      ::MVector2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MObstacle::kObstacleIdFieldNumber;
const int MObstacle::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MObstacle::MObstacle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMObstacle();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MObstacle)
}
MObstacle::MObstacle(const MObstacle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::MVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  obstacleid_ = from.obstacleid_;
  // @@protoc_insertion_point(copy_constructor:MObstacle)
}

void MObstacle::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obstacleid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(obstacleid_));
}

MObstacle::~MObstacle() {
  // @@protoc_insertion_point(destructor:MObstacle)
  SharedDtor();
}

void MObstacle::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void MObstacle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MObstacle::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MObstacle& MObstacle::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMObstacle();
  return *internal_default_instance();
}

MObstacle* MObstacle::New(::google::protobuf::Arena* arena) const {
  MObstacle* n = new MObstacle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MObstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:MObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_pos()) {
    GOOGLE_DCHECK(pos_ != NULL);
    pos_->::MVector2::Clear();
  }
  obstacleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MObstacle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MObstacle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 obstacleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_obstacleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obstacleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MVector2 pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MObstacle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MObstacle)
  return false;
#undef DO_
}

void MObstacle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 obstacleId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obstacleid(), output);
  }

  // required .MVector2 pos = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MObstacle)
}

::google::protobuf::uint8* MObstacle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 obstacleId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->obstacleid(), target);
  }

  // required .MVector2 pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MObstacle)
  return target;
}

size_t MObstacle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MObstacle)
  size_t total_size = 0;

  if (has_pos()) {
    // required .MVector2 pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_obstacleid()) {
    // required int32 obstacleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obstacleid());
  }

  return total_size;
}
size_t MObstacle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MObstacle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MVector2 pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required int32 obstacleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obstacleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MObstacle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  const MObstacle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MObstacle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MObstacle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MObstacle)
    MergeFrom(*source);
  }
}

void MObstacle::MergeFrom(const MObstacle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pos()->::MVector2::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000002u) {
      obstacleid_ = from.obstacleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MObstacle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MObstacle::CopyFrom(const MObstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MObstacle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void MObstacle::Swap(MObstacle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MObstacle::InternalSwap(MObstacle* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(obstacleid_, other->obstacleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MObstacle::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MRequestStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MRequestStatus::kRobotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MRequestStatus::MRequestStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMRequestStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MRequestStatus)
}
MRequestStatus::MRequestStatus(const MRequestStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robotid_ = from.robotid_;
  // @@protoc_insertion_point(copy_constructor:MRequestStatus)
}

void MRequestStatus::SharedCtor() {
  _cached_size_ = 0;
  robotid_ = 0;
}

MRequestStatus::~MRequestStatus() {
  // @@protoc_insertion_point(destructor:MRequestStatus)
  SharedDtor();
}

void MRequestStatus::SharedDtor() {
}

void MRequestStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MRequestStatus::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MRequestStatus& MRequestStatus::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMRequestStatus();
  return *internal_default_instance();
}

MRequestStatus* MRequestStatus::New(::google::protobuf::Arena* arena) const {
  MRequestStatus* n = new MRequestStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MRequestStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:MRequestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robotid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MRequestStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MRequestStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 robotId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_robotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MRequestStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MRequestStatus)
  return false;
#undef DO_
}

void MRequestStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MRequestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->robotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MRequestStatus)
}

::google::protobuf::uint8* MRequestStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MRequestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->robotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MRequestStatus)
  return target;
}

size_t MRequestStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MRequestStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 robotId = 1;
  if (has_robotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MRequestStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MRequestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const MRequestStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MRequestStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MRequestStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MRequestStatus)
    MergeFrom(*source);
  }
}

void MRequestStatus::MergeFrom(const MRequestStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MRequestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_robotid()) {
    set_robotid(from.robotid());
  }
}

void MRequestStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MRequestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MRequestStatus::CopyFrom(const MRequestStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MRequestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MRequestStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MRequestStatus::Swap(MRequestStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MRequestStatus::InternalSwap(MRequestStatus* other) {
  using std::swap;
  swap(robotid_, other->robotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MRequestStatus::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MRobotStatus::InitAsDefaultInstance() {
  ::_MRobotStatus_default_instance_._instance.get_mutable()->pos_ = const_cast< ::MVector2*>(
      ::MVector2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MRobotStatus::kRobotIdFieldNumber;
const int MRobotStatus::kPosFieldNumber;
const int MRobotStatus::kObstaclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MRobotStatus::MRobotStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMRobotStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MRobotStatus)
}
MRobotStatus::MRobotStatus(const MRobotStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      obstacles_(from.obstacles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::MVector2(*from.pos_);
  } else {
    pos_ = NULL;
  }
  robotid_ = from.robotid_;
  // @@protoc_insertion_point(copy_constructor:MRobotStatus)
}

void MRobotStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(robotid_));
}

MRobotStatus::~MRobotStatus() {
  // @@protoc_insertion_point(destructor:MRobotStatus)
  SharedDtor();
}

void MRobotStatus::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void MRobotStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MRobotStatus::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MRobotStatus& MRobotStatus::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMRobotStatus();
  return *internal_default_instance();
}

MRobotStatus* MRobotStatus::New(::google::protobuf::Arena* arena) const {
  MRobotStatus* n = new MRobotStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MRobotStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:MRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obstacles_.Clear();
  if (has_pos()) {
    GOOGLE_DCHECK(pos_ != NULL);
    pos_->::MVector2::Clear();
  }
  robotid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MRobotStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MRobotStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 robotId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_robotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MVector2 pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MObstacle obstacles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obstacles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MRobotStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MRobotStatus)
  return false;
#undef DO_
}

void MRobotStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->robotid(), output);
  }

  // optional .MVector2 pos = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // repeated .MObstacle obstacles = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->obstacles(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MRobotStatus)
}

::google::protobuf::uint8* MRobotStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->robotid(), target);
  }

  // optional .MVector2 pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  // repeated .MObstacle obstacles = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->obstacles(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MRobotStatus)
  return target;
}

size_t MRobotStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MRobotStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 robotId = 1;
  if (has_robotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotid());
  }
  // repeated .MObstacle obstacles = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->obstacles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obstacles(static_cast<int>(i)));
    }
  }

  // optional .MVector2 pos = 2;
  if (has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MRobotStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MRobotStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const MRobotStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MRobotStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MRobotStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MRobotStatus)
    MergeFrom(*source);
  }
}

void MRobotStatus::MergeFrom(const MRobotStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MRobotStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obstacles_.MergeFrom(from.obstacles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pos()->::MVector2::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000002u) {
      robotid_ = from.robotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MRobotStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MRobotStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MRobotStatus::CopyFrom(const MRobotStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MRobotStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MRobotStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->obstacles())) return false;
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void MRobotStatus::Swap(MRobotStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MRobotStatus::InternalSwap(MRobotStatus* other) {
  using std::swap;
  obstacles_.InternalSwap(&other->obstacles_);
  swap(pos_, other->pos_);
  swap(robotid_, other->robotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MRobotStatus::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MCommand::kRobotIdFieldNumber;
const int MCommand::kVxFieldNumber;
const int MCommand::kVyFieldNumber;
const int MCommand::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MCommand::MCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MCommand)
}
MCommand::MCommand(const MCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vx_, &from.vx_,
    static_cast<size_t>(reinterpret_cast<char*>(&robotid_) -
    reinterpret_cast<char*>(&vx_)) + sizeof(robotid_));
  // @@protoc_insertion_point(copy_constructor:MCommand)
}

void MCommand::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotid_) -
      reinterpret_cast<char*>(&vx_)) + sizeof(robotid_));
}

MCommand::~MCommand() {
  // @@protoc_insertion_point(destructor:MCommand)
  SharedDtor();
}

void MCommand::SharedDtor() {
}

void MCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MCommand::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MCommand& MCommand::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMCommand();
  return *internal_default_instance();
}

MCommand* MCommand::New(::google::protobuf::Arena* arena) const {
  MCommand* n = new MCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:MCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&vx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&robotid_) -
        reinterpret_cast<char*>(&vx_)) + sizeof(robotid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 robotId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_robotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_vx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_vy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double t = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MCommand)
  return false;
#undef DO_
}

void MCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->robotid(), output);
  }

  // required double vx = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vx(), output);
  }

  // required double vy = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vy(), output);
  }

  // required double t = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->t(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MCommand)
}

::google::protobuf::uint8* MCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 robotId = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->robotid(), target);
  }

  // required double vx = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vx(), target);
  }

  // required double vy = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->vy(), target);
  }

  // required double t = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->t(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MCommand)
  return target;
}

size_t MCommand::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MCommand)
  size_t total_size = 0;

  if (has_vx()) {
    // required double vx = 2;
    total_size += 1 + 8;
  }

  if (has_vy()) {
    // required double vy = 3;
    total_size += 1 + 8;
  }

  if (has_t()) {
    // required double t = 4;
    total_size += 1 + 8;
  }

  if (has_robotid()) {
    // required int32 robotId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotid());
  }

  return total_size;
}
size_t MCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double vx = 2;
    total_size += 1 + 8;

    // required double vy = 3;
    total_size += 1 + 8;

    // required double t = 4;
    total_size += 1 + 8;

    // required int32 robotId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const MCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MCommand)
    MergeFrom(*source);
  }
}

void MCommand::MergeFrom(const MCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      vx_ = from.vx_;
    }
    if (cached_has_bits & 0x00000002u) {
      vy_ = from.vy_;
    }
    if (cached_has_bits & 0x00000004u) {
      t_ = from.t_;
    }
    if (cached_has_bits & 0x00000008u) {
      robotid_ = from.robotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MCommand::CopyFrom(const MCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MCommand::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void MCommand::Swap(MCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MCommand::InternalSwap(MCommand* other) {
  using std::swap;
  swap(vx_, other->vx_);
  swap(vy_, other->vy_);
  swap(t_, other->t_);
  swap(robotid_, other->robotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MCommand::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MDRSServer::InitAsDefaultInstance() {
  ::_MDRSServer_default_instance_._instance.get_mutable()->request_ = const_cast< ::MRequestStatus*>(
      ::MRequestStatus::internal_default_instance());
  ::_MDRSServer_default_instance_._instance.get_mutable()->command_ = const_cast< ::MCommand*>(
      ::MCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MDRSServer::kRequestFieldNumber;
const int MDRSServer::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MDRSServer::MDRSServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMDRSServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MDRSServer)
}
MDRSServer::MDRSServer(const MDRSServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request()) {
    request_ = new ::MRequestStatus(*from.request_);
  } else {
    request_ = NULL;
  }
  if (from.has_command()) {
    command_ = new ::MCommand(*from.command_);
  } else {
    command_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MDRSServer)
}

void MDRSServer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&request_)) + sizeof(command_));
}

MDRSServer::~MDRSServer() {
  // @@protoc_insertion_point(destructor:MDRSServer)
  SharedDtor();
}

void MDRSServer::SharedDtor() {
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete command_;
}

void MDRSServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MDRSServer::descriptor() {
  ::protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MDRSServer& MDRSServer::default_instance() {
  ::protobuf_messages_5fDRSServer_2eproto::InitDefaultsMDRSServer();
  return *internal_default_instance();
}

MDRSServer* MDRSServer::New(::google::protobuf::Arena* arena) const {
  MDRSServer* n = new MDRSServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MDRSServer::Clear() {
// @@protoc_insertion_point(message_clear_start:MDRSServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->::MRequestStatus::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(command_ != NULL);
      command_->::MCommand::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MDRSServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MDRSServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MRequestStatus request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MCommand command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MDRSServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MDRSServer)
  return false;
#undef DO_
}

void MDRSServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MDRSServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MRequestStatus request = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->request_, output);
  }

  // optional .MCommand command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->command_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MDRSServer)
}

::google::protobuf::uint8* MDRSServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MDRSServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MRequestStatus request = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->request_, deterministic, target);
  }

  // optional .MCommand command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->command_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MDRSServer)
  return target;
}

size_t MDRSServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MDRSServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .MRequestStatus request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->request_);
    }

    // optional .MCommand command = 2;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MDRSServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MDRSServer)
  GOOGLE_DCHECK_NE(&from, this);
  const MDRSServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MDRSServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MDRSServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MDRSServer)
    MergeFrom(*source);
  }
}

void MDRSServer::MergeFrom(const MDRSServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MDRSServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_request()->::MRequestStatus::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_command()->::MCommand::MergeFrom(from.command());
    }
  }
}

void MDRSServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MDRSServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MDRSServer::CopyFrom(const MDRSServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MDRSServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MDRSServer::IsInitialized() const {
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  if (has_command()) {
    if (!this->command_->IsInitialized()) return false;
  }
  return true;
}

void MDRSServer::Swap(MDRSServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MDRSServer::InternalSwap(MDRSServer* other) {
  using std::swap;
  swap(request_, other->request_);
  swap(command_, other->command_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MDRSServer::GetMetadata() const {
  protobuf_messages_5fDRSServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fDRSServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
